package response

import (
	"fmt"
	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/poixeai/proxify/infra/ctx"
	"github.com/poixeai/proxify/infra/types"
	"github.com/poixeai/proxify/util"
)

func RespondError(c *gin.Context,
	httpCode int,
	message string,
	typeStr string,
) {
	reqID := c.GetString(ctx.RequestID)
	note := "This error was generated by the system, not from any upstream provider."

	var details *ErrorDetail
	if reqID != "" {
		details = &ErrorDetail{
			RequestID: reqID,
			Note:      note,
		}
	}

	c.JSON(httpCode, ErrorResponse{
		Error: ErrorInfo{
			Message: message,
			Type:    typeStr,
			Source:  types.ErrorSourceSystem,
			Details: details,
		},
	})
}

func RespondInternalError(c *gin.Context) {
	RespondError(
		c,
		http.StatusInternalServerError,
		"Internal Server Error",
		INTERNAL_ERROR,
	)
}

func RespondBadRequestError(c *gin.Context) {
	RespondError(
		c,
		http.StatusBadRequest,
		"Bad Request",
		INVALID_REQUEST_ERROR,
	)
}

func RespondTopRouteNotFoundError(c *gin.Context) {
	fullPath := c.Request.URL.Path
	method := c.Request.Method

	firstSegment, _ := util.ExtractRoute(fullPath)

	message := fmt.Sprintf(
		"The requested route [%s %s] did not match any available endpoint under [%s]. Please verify the path or configuration.",
		method,
		fullPath,
		firstSegment,
	)

	RespondError(
		c,
		http.StatusNotFound,
		message,
		NOT_FOUND_ERROR,
	)
}

func RespondSystemRouteNotFoundError(c *gin.Context) {
	fullPath := c.Request.URL.Path
	method := c.Request.Method

	message := fmt.Sprintf(
		"404 Not Found: The requested system route [%s %s] does not exist. Please check the URL for errors.",
		method,
		fullPath,
	)

	RespondError(
		c,
		http.StatusNotFound,
		message,
		NOT_FOUND_ERROR,
	)
}
